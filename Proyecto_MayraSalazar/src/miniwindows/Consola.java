/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniwindows;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;
import miniwindows.Miniwindows;

/**
 *
 * @author Mayra Salazar
 */
public class Consola extends javax.swing.JFrame {

    /**
     * Creates new form Consola
     */
    public Consola() {
        initComponents();
        Miniwindows m = new Miniwindows();
        path += "\\" + m.logAs;
        this.consola.setCaretColor(Color.white);
        this.consola.setText(path + ">\n");
        this.setTitle("MiniWindows Console");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        consola.setBackground(new java.awt.Color(0, 0, 0));
        consola.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        consola.setForeground(new java.awt.Color(255, 255, 255));
        consola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                consolaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(consola);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        String path = "./Z\\Users";

    private void consolaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consolaKeyPressed
        this.consola.setCaretColor(Color.white);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String text = this.consola.getText();
            String textoPane = this.consola.getText();
            String[] lines = text.split("\n");
            String lastline = lines[lines.length - 1];
            Scanner read = new Scanner(lastline);
            read.useDelimiter(">");
            String[] containers = new String[1];
            int index = 0;
            while (read.hasNext()) {
                containers[index] = read.next();
                index++;
            }
            if (containers[0] != null) {
                String dir = containers[0];
                if (dir.contains("mkdir ")) {
                    dir = dir.replace("mkdir ", "").replace(" ", "");
                    if (createDirectory(path + "\\" + dir)) {
                        textoPane += "\n El directorio ya existe\n";
                    }
                } else if (dir.contains("rm ")) {
                    dir = dir.replace("rm ", "");
                    borrar(path + "\\" + dir);
                } else if (dir.contains("cd ") && !dir.contains("..")) {
                    dir = dir.replace("cd ", "");
                    if ((new File(path += "\\" + dir).exists())) {
                        System.out.println("exists");
                    } else {
                        textoPane += "\n El directorio no existe";
                        path = path.replace((path.substring(path.lastIndexOf("\\"), path.length())), "");
                    }
                } else if (dir.contains("cd ..")) {
                    path = path.replace((path.substring(path.lastIndexOf("\\"), path.length())), "");
                } else if (dir.contains("time")) {
                    DateFormat f = new SimpleDateFormat("HH:mm:ss");
                    Date date = new Date();
                    textoPane += "\n La hora actual es: " + f.format(date);
                } else if (dir.contains("date")) {
                    Date date = new Date();
                    DateFormat f = new SimpleDateFormat("dd/MMMM/YYYY");
                    textoPane += "\n La fecha actual es: " + f.format(date);
                } else if (dir.contains("help")) {
                    textoPane += "\n-----Help------"
                            + "\n mkdir ------- Crea un directorio"
                            + "\n rm ---------- Elimina un archivo o directorio"
                            + "\n cd ---------- Commando para moverse entre carpetas"
                            + "\n time -------- Da la hora actual"
                            + "\n date -------- Da la fecha actual"
                            + "\n dir --------- Lista todo en la carpeta actual";
                } else if (dir.contains("dir") && !dir.contains("mkdir")) {
                    File direc = new File(path);
                    File[] files = direc.listFiles();
                    for (File file : files) {
                        if (file.isDirectory()) {
                            textoPane += "\n Directorio: " + file.getName();
                        }
                        if (file.isFile()) {
                            textoPane+= "\nArchivo: " + file.getName();
                        }
                    }
                } else {
                    textoPane += "Ingrese un comando vÃ¡lido, escriba help para ver comandos\n";
                }
                index = 0;
            }
            textoPane += "\n" + path + ">";
            consola.setText(textoPane);
        }


    }//GEN-LAST:event_consolaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consola.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consola().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane consola;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
public boolean createDirectory(String path) {
        if (new File(path).exists()) {
            return true;
        } else {
            new File(path).mkdir();
            return false;
        }

    }

    public void borrar(String path) {
        if (new File(path).isDirectory()) {

        } else {
            new File(path).delete();
        }

    }
}
